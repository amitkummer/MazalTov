apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
    {{- include "birthday-calendar.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: backend
      {{- include "birthday-calendar.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: backend
        {{- include "birthday-calendar.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backend.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-backend
          image: "{{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.backend.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /api/
              port: http
          readinessProbe:
            httpGet:
              path: /api/
              port: http
          startupProbe:
            httpGet:
              path: /api/
              port: http
            failureThreshold: 30
            periodSeconds: 10
          env:
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backend
                  key: key
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: db-migration
          image: "{{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag | default .Chart.AppVersion }}"
          command: ["python", "manage.py"]
          args:
            - migrate
          env:
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: backend
                  key: key
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: backend-data
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
